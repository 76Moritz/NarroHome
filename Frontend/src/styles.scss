
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$my-custom-palette: (
  50:  #ffffff,
  100: #ee8686,
  200: #ee4343,
  300: #ff0707,
  400: #d80909,
  500: #b30000, // Standardfarbe
  600: #ee8686,
  700: #ee4343,
  800: #ff0707,
  900: #d80909,
  A100:#b30000,
  A200: #ff0707,
  A400: #d80909,
  A700: #b30000,
  contrast: (
    50:  black,
    100: black,
    200: black,
    300: black,
    400: black,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: black,
    A200: white,
    A400: white,
    A700: white,
  )
);

$Frontend-primary: mat.define-palette($my-custom-palette,500);


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Frontend-theme: mat.define-light-theme((
  color: (
    primary: $Frontend-primary,
    accent: $Frontend-primary,
    warn: $Frontend-primary,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Frontend-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
